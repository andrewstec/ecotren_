@*@model IEnumerable<EcoTrend_Industry_Project.Contact>*@


@model PagedList.IPagedList<EcoTrend_Industry_Project.ViewModels.ContactVM>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Contact Management Area";
    if (User.Identity.IsAuthenticated)
    {
        Layout = "~/Views/Shared/_Layout.cshtml";
    }

}
<h2>Contact Management Area</h2>

<br /><br />
@using (Html.BeginForm("ContactManagement", "Home", FormMethod.Post, new { @class = "form-horizontal" }))
{
    <div id="searchInput-div">
        @Html.TextBox("SearchString", null, new { @class = "form-control", placeholder = "Search by first name or last name" })
    </div>
    <div id="searchBtn-div">
        <button type="submit" class="btn btn-default">
            Search
            <span class="fa fa-search fa-fw"></span>
        </button>
        @*<input type="submit" value="Search" class="btn btn-default" />*@
    </div>
}

@{
    if (User.IsInRole("admin"))
    {
        <form method="get" action="/Home/CreateContact">
            <div id="AddContactBtn">
                <input id="Submit1" type="submit" value="Add Contact" class="btn btn-default pull-right" />
            </div>
        </form>
    }
    else if (User.IsInRole("salesrep"))
    {
        <div id="AddContactBtn">
            <a href="@Url.Action("AddContact", "SalesRep")" class="btn btn-primary">
                Add Contact
                <span class="fa fa-user-plus fa-fw"></span>
            </a>
            @*@Html.ActionLink("Add Contact", "AddContact", "SalesRep", null, new { @class = "btn btn-primary" })*@
        </div>
    }
}
<div id="GetAllContactBtn">
    <a href="@Url.Action("GetContactEmails", "SalesRep")" class="btn btn-default">
        Get Emails
        <span class="fa fa-envelope fa-fw"></span>
    </a>
    @*@Html.ActionLink("Get Emails", "GetContactEmails", "SalesRep", null, new { @class = "btn btn-default" })*@
</div>

<div class="table-responsive">
    <table id="" class="table table-responsive table-hover">
        <thead>
            <tr>
                <th class="hidden-sm hidden-xs">
                    @*@Html.DisplayNameFor(model => model.contactID)*@
                    Contact ID
                </th>
                <th>
                    @*@Html.ActionLink("Company", "ContactManagement", new { sortOrder = ViewBag.DateSortParm })*@
                    @* @Html.DisplayNameFor(model => model.Store.shortName)*@
                    Store Name
                </th>
                <th class="hidden-sm hidden-xs">
                    @*@Html.DisplayNameFor(model => model.branch)*@
                    Department
                </th>
                <th>
                    @Html.ActionLink("First Name", "ContactManagement", new { sortOrder = ViewBag.NameSortParm })
                </th>

                <th>
                    @Html.ActionLink("Last Name", "ContactManagement", new { sortOrder = ViewBag.NameSortParm })

                </th>

                <th>
                    @*@Html.DisplayNameFor(model => model.email)*@
                    Email
                </th>
                <th>
                    @* @Html.DisplayNameFor(model => model.telephone)*@
                    Telephone
                </th>
                <th class="none"></th>
                <th class="none"></th>
                <th class="none"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var thing in Model)
            {
                <tr>
                    <td class="hidden-sm hidden-xs">
                        @Html.DisplayFor(modelItem => thing.ContactID)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => thing.StoreName)
                    </td>
                    <td class="hidden-sm hidden-xs">
                        @Html.DisplayFor(modelItem => thing.Department)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => thing.FirstName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => thing.LastName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => thing.Email)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => thing.Telephone)
                    </td>


                    <td>
                        <a href="@Url.Action("EditContact", "SalesRep", new { id = thing.ContactID})" title="Edit Contact" id="contactManagementEdit">
                            <span class="glyphicon glyphicon-pencil"></span>
                        </a>
                    </td>
                    <td>
                        <a href="@Url.Action("ContactNotes", "SalesRep", new { id = User.Identity.Name, contactId = thing.ContactID, firstName = thing.FirstName, lastName = thing.LastName} )">
                            <span class="glyphicon glyphicon-list-alt" title="View Notes">
                            </span>
                        </a>
                    </td>
                    <td>
                        <a href="@Url.Action("AddNote", "SalesRep", new { contactId = thing.ContactID, firstName = thing.FirstName, lastName = thing.LastName })">
                            <span class="glyphicon glyphicon-plus" title="Add Note"></span>
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div class="pull-right">
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    @Html.PagedListPager(Model, page => Url.Action("ContactManagement",
new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
</div>